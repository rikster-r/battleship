(()=>{"use strict";const e=new class{constructor(){this.startGameButton=document.querySelector("[data-start-game]"),this.randomPlaceButton=document.querySelector("[data-random-place]"),this.humanField=document.querySelector("[data-human-field]"),this.computerField=document.querySelector("[data-computer-field]"),this.dragsContainer=document.querySelector("[data-draggable-ships]"),this.endgameModal=document.querySelector("[data-game-end]"),this.endgameStatus=this.endgameModal.querySelector("[data-game-status]")}update(e){const t="human"===e.name?this.humanField:this.computerField;e.board.ships.forEach(((a,r)=>{if(void 0!==a.x)for(let s=0;s<a.length;s++){let n;n=a.vertical?t.querySelector(`[data-x="${a.x}"][data-y="${a.y+s}"]`):t.querySelector(`[data-x="${a.x+s}"][data-y="${a.y}"]`),n.dataset.id=r,a.isSunk()?(n.className="sunk",document.querySelector(`[data-${e.name}-ship][data-ship-id="${r}"]`).classList.remove("active")):a.hits[s]&&(n.className="hit")}})),e.board.missed.forEach((e=>{e[0]>10||e[0]<0||e[1]>10||e[1]<0||(t.querySelector(`[data-x="${e[0]}"][data-y="${e[1]}"]`).className="missed")}))}populateField(e,t){e.innerHTML="";for(let a=1;a<=10;a++)for(let r=1;r<=10;r++){let s=document.createElement("button");s.dataset.y=a,s.dataset.x=r,t&&s.addEventListener("click",(function(e){t(e.target)})),e.append(s)}}};class t{constructor(e,t,a,r=!1){this.length=e,this.hits=Array(e).fill(!1),this.vertical=r,this.x=t,this.y=a,this.endX=r?t:t+e-1,this.endY=r?a+e-1:a}hit(e){this.hits[e]=!0}isSunk(){return this.hits.every((e=>!0===e))}hasCell(e,t,a){return a?this.x-1<=e&&e<=this.endX+1&&this.y-1<=t&&t<=this.endY+1:this.x<=e&&e<=this.endX&&this.y<=t&&t<=this.endY}}const a=(e,t)=>Math.floor(Math.random()*(t-e+1)+e);class r{constructor(){this.resetShipCoords(),this.missed=new Set}resetShipCoords(){this.ships=new Map([[1,new t(1)],[2,new t(1)],[3,new t(2)],[4,new t(2)],[5,new t(3)],[6,new t(3)],[7,new t(4)],[8,new t(4)]])}randomPlace(){this.resetShipCoords(),this.ships.forEach(((e,t)=>{let r,s,n;for(;void 0===this.ships.get(t).x;)r=a(1,10),s=a(1,10),n=Math.random()<.5,this.changeShipCoords(t,r,s,n)}))}changeShipCoords(e,a,r,s=!1){const n=this.ships.get(e);this.#e(a,r,n.length,s,e)&&this.ships.set(e,new t(n.length,a,r,s))}#e(e,t,a,r,s){if(e+a-1>10)return!1;if(t>10)return!1;if(r&&t+a-1>10)return!1;if(e<1||t<1)return!1;if("number"!=typeof e||"number"!=typeof t)return!1;for(let s of this.ships.values())for(let n=0;n<a;n++)if(r){if(s.hasCell(e,t+n,!0))return!1}else if(s.hasCell(e+n,t,!0))return!1;return!0}receiveAttack(e,t){if(e<1||e>10)return;if(t<1||t>10)return;let a=!0;for(const r of this.ships.values())if(r.hasCell(e,t)){const s=r.vertical?t-r.y:e-r.x;r.hit(s),a=!1;break}a&&this.missed.add([e,t])}areShipsSunk(){for(let e of this.ships.values())if(!e.isSunk())return!1;return!0}}class s{constructor(e){this.name=e,this.enemy=void 0,this.board=new r}makeMove(e,t){this.enemy.board.receiveAttack(e,t)}}const n=new class extends s{constructor(){super("human")}},i=new class extends s{constructor(){super("computer"),this.attacks=new Set}makeMove(){const[e,t]=this.#t();super.makeMove(e,t)}#t(){let e,t;do{e=a(1,10),t=a(1,10)}while(this.attacks.has([e,t]));return this.attacks.add([e,t]),[e,t]}};n.enemy=i,i.enemy=n,Array.from(e.dragsContainer.children).forEach((e=>{e.addEventListener("dragstart",(function(e){!function(e){e.dataTransfer.setData("id",e.target.dataset.id),e.dataTransfer.setData("direction",e.target.dataset.vertical)}(e)})),e.addEventListener("click",(function(e){!function(e){const t=e.target.closest(".ship-wrapper");t.dataset.vertical=t.dataset.vertical?"":"true"}(e)}))})),e.humanField.addEventListener("dragover",(function(e){e.preventDefault()})),e.humanField.addEventListener("drop",(function(t){!function(t){const a=Number(t.dataTransfer.getData("id")),r=Number(t.target.dataset.x),s=Number(t.target.dataset.y),i=t.dataTransfer.getData("direction");n.board.changeShipCoords(a,r,s,i),n.board.ships.get(a).x&&document.querySelector(`[draggable="true"][data-id="${a}"`).remove(),e.update(n)}(t)}));const d=new class{constructor(){this.human=n,this.computer=i,this.currentPlayer=n}start(){e.dragsContainer.firstElementChild||(e.startGameButton.classList.add("hidden"),e.randomPlaceButton.classList.add("hidden"),document.querySelector(".computer-side").classList.remove("hidden"))}attackComputer(t){if(t.classList.length>0)return;const a=Number(t.dataset.x),r=Number(t.dataset.y);this.currentPlayer.makeMove(a,r),this.checkWin()&&this.end(),e.update(this.currentPlayer.enemy),this.currentPlayer=i,this.attackHuman()}attackHuman(){this.currentPlayer.makeMove(),e.update(this.currentPlayer.enemy),this.currentPlayer=n}checkWin(){return this.currentPlayer.enemy.board.areShipsSunk()}end(){e.endgameStatus.innerText=this.currentPlayer===n?"won":"lost",e.endgameModal.showModal()}};e.populateField(e.humanField),e.populateField(e.computerField,(e=>d.attackComputer(e))),d.computer.board.randomPlace(),e.startGameButton.addEventListener("click",(function(){d.start()})),e.randomPlaceButton.addEventListener("click",(()=>{d.human.board.randomPlace(),e.populateField(e.humanField),e.update(d.human),e.dragsContainer.innerHTML=""}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2xDM0UsS0FBSytGLGNBQWdCaEIsRUFDckIvRSxLQUFLcUcsYUFDUCxDQUVBQSxjQUNFckcsS0FBSytGLGNBQWNuQixXQUNuQjlFLEVBQVFZLE9BQU9WLEtBQUsrRixjQUFjcEIsT0FDbEMzRSxLQUFLK0YsY0FBZ0JsQixDQUN2QixDQUVBc0IsV0FDRSxPQUFPbkcsS0FBSytGLGNBQWNwQixNQUFNN0QsTUFBTTJELGNBQ3hDLENBRUEyQixNQUNFdEcsRUFBUVcsY0FBYzZGLFVBQWF0RyxLQUFLK0YsZ0JBQWtCbEIsRUFBUyxNQUFRLE9BQzNFL0UsRUFBUVUsYUFBYStGLFdBQ3ZCLEdEdkNGekcsRUFBUXFDLGNBQWNyQyxFQUFRTyxZQUM5QlAsRUFBUXFDLGNBQWNyQyxFQUFRUSxlQUFnQnFDLEdBQVdtRCxFQUFLSSxlQUFldkQsS0FDN0VtRCxFQUFLZixTQUFTakUsTUFBTW1ELGNBRXBCbkUsRUFBUUcsZ0JBQWdCd0MsaUJBQWlCLFNBQVMsV0FDaERxRCxFQUFLRSxPQUNQLElBRUFsRyxFQUFRTSxrQkFBa0JxQyxpQkFBaUIsU0FBUyxLQUNsRHFELEVBQUtqQixNQUFNL0QsTUFBTW1ELGNBRWpCbkUsRUFBUXFDLGNBQWNyQyxFQUFRTyxZQUM5QlAsRUFBUVksT0FBT29GLEVBQUtqQixPQUNwQi9FLEVBQVFTLGVBQWU4QixVQUFZLEVBQUUsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvYXBwL2Rpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9hcHAvc2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2FwcC9tb2R1bGVzL3JhbmRvbU51bUluUmFuZ2UuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9hcHAvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvYXBwL3BsYXllci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2FwcC9tb2R1bGVzL2RyYWduZHJvcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2FwcC9pbmRleC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2FwcC9nYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIERpc3BsYXkge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5zdGFydEdhbWVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zdGFydC1nYW1lXScpO1xyXG4gICAgdGhpcy5yYW5kb21QbGFjZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXJhbmRvbS1wbGFjZV0nKVxyXG5cclxuICAgIHRoaXMuaHVtYW5GaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWh1bWFuLWZpZWxkXScpO1xyXG4gICAgdGhpcy5jb21wdXRlckZpZWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtY29tcHV0ZXItZmllbGRdJyk7XHJcbiAgICB0aGlzLmRyYWdzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZHJhZ2dhYmxlLXNoaXBzXScpO1xyXG5cclxuICAgIHRoaXMuZW5kZ2FtZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZ2FtZS1lbmRdJyk7XHJcbiAgICB0aGlzLmVuZGdhbWVTdGF0dXMgPSB0aGlzLmVuZGdhbWVNb2RhbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1nYW1lLXN0YXR1c10nKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShwbGF5ZXIpIHtcclxuICAgIGNvbnN0IGZpZWxkID0gKHBsYXllci5uYW1lID09PSAnaHVtYW4nKSA/IHRoaXMuaHVtYW5GaWVsZCA6IHRoaXMuY29tcHV0ZXJGaWVsZDtcclxuXHJcbiAgICBwbGF5ZXIuYm9hcmQuc2hpcHMuZm9yRWFjaCgoc2hpcCwgc2hpcElkKSA9PiB7XHJcbiAgICAgIGlmIChzaGlwLnggPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xyXG5cclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHNoaXBDZWxsO1xyXG5cclxuICAgICAgICBpZiAoc2hpcC52ZXJ0aWNhbCkge1xyXG4gICAgICAgICAgc2hpcENlbGwgPSBmaWVsZC5xdWVyeVNlbGVjdG9yKGBbZGF0YS14PVwiJHtzaGlwLnh9XCJdW2RhdGEteT1cIiR7c2hpcC55ICsgaX1cIl1gKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc2hpcENlbGwgPSBmaWVsZC5xdWVyeVNlbGVjdG9yKGBbZGF0YS14PVwiJHtzaGlwLnggKyBpfVwiXVtkYXRhLXk9XCIke3NoaXAueX1cIl1gKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNoaXBDZWxsLmRhdGFzZXQuaWQgPSBzaGlwSWQ7XHJcblxyXG4gICAgICAgIGlmIChzaGlwLmlzU3VuaygpKSB7XHJcbiAgICAgICAgICBzaGlwQ2VsbC5jbGFzc05hbWUgPSAnc3Vuayc7XHJcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbZGF0YS0ke3BsYXllci5uYW1lfS1zaGlwXVtkYXRhLXNoaXAtaWQ9XCIke3NoaXBJZH1cIl1gKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHNoaXAuaGl0c1tpXSkge1xyXG4gICAgICAgICAgc2hpcENlbGwuY2xhc3NOYW1lID0gJ2hpdCc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBwbGF5ZXIuYm9hcmQubWlzc2VkLmZvckVhY2goKGNvb3JkcykgPT4ge1xyXG4gICAgICBpZiAoY29vcmRzWzBdID4gMTAgfHwgY29vcmRzWzBdIDwgMCB8fCBjb29yZHNbMV0gPiAxMCB8fCBjb29yZHNbMV0gPCAwKSByZXR1cm47XHJcbiAgICAgIGZpZWxkLnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLXg9XCIke2Nvb3Jkc1swXX1cIl1bZGF0YS15PVwiJHtjb29yZHNbMV19XCJdYCkuY2xhc3NOYW1lID0gJ21pc3NlZCc7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHBvcHVsYXRlRmllbGQoZmllbGQsIGZ1bmMpIHtcclxuICAgIGZpZWxkLmlubmVySFRNTCA9ICcnO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDEwOyBpKyspIHtcclxuICAgICAgZm9yIChsZXQgaiA9IDE7IGogPD0gMTA7IGorKykge1xyXG4gICAgICAgIGxldCBjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgICAgY2VsbC5kYXRhc2V0LnkgPSBpO1xyXG4gICAgICAgIGNlbGwuZGF0YXNldC54ID0gajtcclxuICAgICAgICBpZiAoZnVuYykge1xyXG4gICAgICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7IGZ1bmMoZS50YXJnZXQpIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICBmaWVsZC5hcHBlbmQoY2VsbCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5ID0gbmV3IERpc3BsYXkoKTsiLCJleHBvcnQgY2xhc3MgU2hpcCB7XHJcbiAgY29uc3RydWN0b3IobGVuZ3RoLCB4LCB5LCB2ZXJ0aWNhbCA9IGZhbHNlKSB7XHJcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aDtcclxuICAgIHRoaXMuaGl0cyA9IEFycmF5KGxlbmd0aCkuZmlsbChmYWxzZSk7XHJcbiAgICB0aGlzLnZlcnRpY2FsID0gdmVydGljYWw7XHJcbiAgICB0aGlzLnggPSB4O1xyXG4gICAgdGhpcy55ID0geTtcclxuICAgIHRoaXMuZW5kWCA9ICh2ZXJ0aWNhbCkgPyB4IDogeCArIGxlbmd0aCAtIDE7XHJcbiAgICB0aGlzLmVuZFkgPSAodmVydGljYWwpID8geSArIGxlbmd0aCAtIDEgOiB5O1xyXG4gIH1cclxuXHJcbiAgaGl0KGluZGV4KSB7XHJcbiAgICB0aGlzLmhpdHNbaW5kZXhdID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGlzU3VuaygpIHtcclxuICAgIHJldHVybiB0aGlzLmhpdHMuZXZlcnkoY2VsbCA9PiBjZWxsID09PSB0cnVlKTtcclxuICB9XHJcblxyXG4gIGhhc0NlbGwoeCwgeSwgYXJvdW5kKSB7XHJcbiAgICBpZiAoYXJvdW5kKSB7XHJcbiAgICAgIHJldHVybiAodGhpcy54IC0gMSA8PSB4KSAmJiAoeCA8PSB0aGlzLmVuZFggKyAxKSAmJiAodGhpcy55IC0gMSA8PSB5KSAmJiAoeSA8PSB0aGlzLmVuZFkgKyAxKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiAodGhpcy54IDw9IHgpICYmICh4IDw9IHRoaXMuZW5kWCkgJiYgKHRoaXMueSA8PSB5KSAmJiAoeSA8PSB0aGlzLmVuZFkpO1xyXG4gICAgfVxyXG4gIH1cclxufSIsImV4cG9ydCBjb25zdCByYW5kb21OdW1JblJhbmdlID0gKG1pbiwgbWF4KSA9PiB7IC8vbWluLCBtYXggaW5jbHVkZWRcclxuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICsgbWluKTtcclxufSIsImltcG9ydCB7IFNoaXAgfSBmcm9tICcuL3NoaXAuanMnO1xyXG5pbXBvcnQgeyByYW5kb21OdW1JblJhbmdlIH0gZnJvbSAnLi9tb2R1bGVzL3JhbmRvbU51bUluUmFuZ2UuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdhbWVib2FyZCB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnJlc2V0U2hpcENvb3JkcygpO1xyXG4gICAgdGhpcy5taXNzZWQgPSBuZXcgU2V0KCk7XHJcbiAgfVxyXG5cclxuICByZXNldFNoaXBDb29yZHMoKSB7XHJcbiAgICB0aGlzLnNoaXBzID0gbmV3IE1hcChbXHJcbiAgICAgIFsxLCBuZXcgU2hpcCgxKV0sXHJcbiAgICAgIFsyLCBuZXcgU2hpcCgxKV0sXHJcblxyXG4gICAgICBbMywgbmV3IFNoaXAoMildLFxyXG4gICAgICBbNCwgbmV3IFNoaXAoMildLFxyXG5cclxuICAgICAgWzUsIG5ldyBTaGlwKDMpXSxcclxuICAgICAgWzYsIG5ldyBTaGlwKDMpXSxcclxuXHJcbiAgICAgIFs3LCBuZXcgU2hpcCg0KV0sXHJcbiAgICAgIFs4LCBuZXcgU2hpcCg0KV0sXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHJhbmRvbVBsYWNlKCkge1xyXG4gICAgdGhpcy5yZXNldFNoaXBDb29yZHMoKTtcclxuXHJcbiAgICB0aGlzLnNoaXBzLmZvckVhY2goKHNoaXAsIGlkKSA9PiB7XHJcbiAgICAgIGxldCB4LCB5LCB2ZXJ0aWNhbDtcclxuXHJcbiAgICAgIHdoaWxlICh0aGlzLnNoaXBzLmdldChpZCkueCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgeCA9IHJhbmRvbU51bUluUmFuZ2UoMSwgMTApO1xyXG4gICAgICAgIHkgPSByYW5kb21OdW1JblJhbmdlKDEsIDEwKTtcclxuICAgICAgICB2ZXJ0aWNhbCA9IE1hdGgucmFuZG9tKCkgPCAwLjUgPyB0cnVlIDogZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jaGFuZ2VTaGlwQ29vcmRzKGlkLCB4LCB5LCB2ZXJ0aWNhbCk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBjaGFuZ2VTaGlwQ29vcmRzKGlkLCB4LCB5LCB2ZXJ0aWNhbCA9IGZhbHNlKSB7XHJcbiAgICBjb25zdCBzaGlwID0gdGhpcy5zaGlwcy5nZXQoaWQpO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkID0gdGhpcy4jdmFsaWRhdGVDb29yZHMoeCwgeSwgc2hpcC5sZW5ndGgsIHZlcnRpY2FsLCBpZCk7XHJcbiAgICBpZiAodmFsaWQpIHtcclxuICAgICAgdGhpcy5zaGlwcy5zZXQoaWQsIG5ldyBTaGlwKHNoaXAubGVuZ3RoLCB4LCB5LCB2ZXJ0aWNhbCkpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gICN2YWxpZGF0ZUNvb3Jkcyh4LCB5LCBsZW5ndGgsIHZlcnRpY2FsLCBpZCkge1xyXG4gICAgaWYgKHggKyBsZW5ndGggLSAxID4gMTApIHJldHVybiBmYWxzZTtcclxuICAgIGlmICh5ID4gMTApIHJldHVybiBmYWxzZTtcclxuICAgIGlmICh2ZXJ0aWNhbCAmJiB5ICsgbGVuZ3RoIC0gMSA+IDEwKSByZXR1cm4gZmFsc2U7XHJcbiAgICBpZiAoeCA8IDEgfHwgeSA8IDEpIHJldHVybiBmYWxzZTtcclxuICAgIGlmICh0eXBlb2YgeCAhPSAnbnVtYmVyJyB8fCB0eXBlb2YgeSAhPSAnbnVtYmVyJykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIGZvciAobGV0IHNoaXAgb2YgdGhpcy5zaGlwcy52YWx1ZXMoKSkge1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7IC8vbG9vcCBmb3IgZXZlcnkgY2VsbCBvZiBvdXIgc2hpcFxyXG4gICAgICAgIGlmICh2ZXJ0aWNhbCkge1xyXG4gICAgICAgICAgaWYgKHNoaXAuaGFzQ2VsbCh4LCB5ICsgaSwgdHJ1ZSkpIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYgKHNoaXAuaGFzQ2VsbCh4ICsgaSwgeSwgdHJ1ZSkpIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHJlY2VpdmVBdHRhY2soeCwgeSkge1xyXG4gICAgaWYgKHggPCAxIHx8IHggPiAxMCkgcmV0dXJuO1xyXG4gICAgaWYgKHkgPCAxIHx8IHkgPiAxMCkgcmV0dXJuO1xyXG4gICAgbGV0IG5vdEZvdW5kID0gdHJ1ZTtcclxuXHJcbiAgICBmb3IgKGNvbnN0IHNoaXAgb2YgdGhpcy5zaGlwcy52YWx1ZXMoKSkgeyAvL3VzZWQgZm9yIGJlY2F1c2UgbmVlZGVkIGJyZWFrIHN0YXRlbWVudFxyXG4gICAgICBpZiAoc2hpcC5oYXNDZWxsKHgsIHkpKSB7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSAoc2hpcC52ZXJ0aWNhbCkgPyB5IC0gc2hpcC55IDogeCAtIHNoaXAueDtcclxuICAgICAgICBzaGlwLmhpdChpbmRleCk7XHJcbiAgICAgICAgbm90Rm91bmQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAobm90Rm91bmQpIHtcclxuICAgICAgdGhpcy5taXNzZWQuYWRkKFt4LCB5XSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhcmVTaGlwc1N1bmsoKSB7XHJcbiAgICBmb3IgKGxldCBzaGlwIG9mIHRoaXMuc2hpcHMudmFsdWVzKCkpIHtcclxuICAgICAgaWYgKCFzaGlwLmlzU3VuaygpKSByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG59IiwiaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSAnLi9nYW1lYm9hcmQnO1xyXG5pbXBvcnQgeyByYW5kb21OdW1JblJhbmdlIH0gZnJvbSAnLi9tb2R1bGVzL3JhbmRvbU51bUluUmFuZ2UnO1xyXG5cclxuICBjbGFzcyBQbGF5ZXIge1xyXG4gICAgY29uc3RydWN0b3IobmFtZSkge1xyXG4gICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICB0aGlzLmVuZW15ID0gdW5kZWZpbmVkO1xyXG4gICAgICB0aGlzLmJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG1ha2VNb3ZlKHgsIHkpIHtcclxuICAgICAgdGhpcy5lbmVteS5ib2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbmNsYXNzIENvbXB1dGVyUGxheWVyIGV4dGVuZHMgUGxheWVyIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCdjb21wdXRlcicpO1xyXG4gICAgdGhpcy5hdHRhY2tzID0gbmV3IFNldCgpO1xyXG4gIH1cclxuXHJcbiAgbWFrZU1vdmUoKSB7XHJcbiAgICBjb25zdCBbeCwgeV0gPSB0aGlzLiNnZW5lcmF0ZUNvb3JkcygpO1xyXG4gICAgc3VwZXIubWFrZU1vdmUoeCwgeSk7XHJcbiAgfVxyXG5cclxuICAjZ2VuZXJhdGVDb29yZHMoKSB7XHJcbiAgICBsZXQgeCwgeTtcclxuXHJcbiAgICBkbyB7XHJcbiAgICAgIHggPSByYW5kb21OdW1JblJhbmdlKDEsIDEwKTtcclxuICAgICAgeSA9IHJhbmRvbU51bUluUmFuZ2UoMSwgMTApO1xyXG4gICAgfSB3aGlsZSAodGhpcy5hdHRhY2tzLmhhcyhbeCwgeV0pKTtcclxuXHJcbiAgICB0aGlzLmF0dGFja3MuYWRkKFt4LCB5XSk7XHJcbiAgICByZXR1cm4gW3gsIHldO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgSHVtYW5QbGF5ZXIgZXh0ZW5kcyBQbGF5ZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoJ2h1bWFuJyk7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBodW1hbiA9IG5ldyBIdW1hblBsYXllcigpO1xyXG5jb25zdCBjb21wdXRlciA9IG5ldyBDb21wdXRlclBsYXllcigpO1xyXG5odW1hbi5lbmVteSA9IGNvbXB1dGVyO1xyXG5jb21wdXRlci5lbmVteSA9IGh1bWFuO1xyXG5cclxuZXhwb3J0IHsgaHVtYW4sIGNvbXB1dGVyIH07IiwiaW1wb3J0IHsgZGlzcGxheSB9IGZyb20gJy4uL2Rpc3BsYXknO1xyXG5pbXBvcnQgeyBodW1hbiB9IGZyb20gJy4uL3BsYXllcic7XHJcblxyXG5mdW5jdGlvbiBkcmFnKGUpIHtcclxuICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKCdpZCcsIGUudGFyZ2V0LmRhdGFzZXQuaWQpO1xyXG4gIGUuZGF0YVRyYW5zZmVyLnNldERhdGEoJ2RpcmVjdGlvbicsIGUudGFyZ2V0LmRhdGFzZXQudmVydGljYWwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkcm9wKGUpIHtcclxuICBjb25zdCBzaGlwSWQgPSBOdW1iZXIoZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgnaWQnKSk7XHJcbiAgY29uc3QgeCA9IE51bWJlcihlLnRhcmdldC5kYXRhc2V0LngpO1xyXG4gIGNvbnN0IHkgPSBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC55KTtcclxuICBjb25zdCB2ZXJ0aWNhbCA9IGUuZGF0YVRyYW5zZmVyLmdldERhdGEoJ2RpcmVjdGlvbicpO1xyXG5cclxuICBodW1hbi5ib2FyZC5jaGFuZ2VTaGlwQ29vcmRzKHNoaXBJZCwgeCwgeSwgdmVydGljYWwpO1xyXG4gIGlmIChodW1hbi5ib2FyZC5zaGlwcy5nZXQoc2hpcElkKS54KSB7IC8vaWYgY29vcmRzIGNoYW5nZWRcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtkcmFnZ2FibGU9XCJ0cnVlXCJdW2RhdGEtaWQ9XCIke3NoaXBJZH1cImApLnJlbW92ZSgpO1xyXG4gIH07XHJcbiAgZGlzcGxheS51cGRhdGUoaHVtYW4pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjaGFuZ2VEaXJlY3Rpb24oZSkge1xyXG4gIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0LmNsb3Nlc3QoJy5zaGlwLXdyYXBwZXInKTtcclxuICB0YXJnZXQuZGF0YXNldC52ZXJ0aWNhbCA9ICh0YXJnZXQuZGF0YXNldC52ZXJ0aWNhbCkgPyAnJyA6ICd0cnVlJztcclxufVxyXG5cclxuQXJyYXkuZnJvbShkaXNwbGF5LmRyYWdzQ29udGFpbmVyLmNoaWxkcmVuKS5mb3JFYWNoKGRuZCA9PiB7XHJcbiAgZG5kLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBkcmFnKGUpO1xyXG4gIH0pO1xyXG5cclxuICBkbmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgY2hhbmdlRGlyZWN0aW9uKGUpO1xyXG4gIH0pXHJcbn0pO1xyXG5cclxuZGlzcGxheS5odW1hbkZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgZnVuY3Rpb24gKGUpIHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbn0pO1xyXG5cclxuZGlzcGxheS5odW1hbkZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2Ryb3AnLCBmdW5jdGlvbiAoZSkge1xyXG4gIGRyb3AoZSk7XHJcbn0pIiwiaW1wb3J0ICcuLi9zdHlsZS5zY3NzJztcclxuaW1wb3J0IHsgZGlzcGxheSB9IGZyb20gJy4vZGlzcGxheSc7XHJcbmltcG9ydCAnLi9tb2R1bGVzL2RyYWduZHJvcCc7XHJcbmltcG9ydCB7IEdhbWUgfSBmcm9tICcuL2dhbWUnO1xyXG5cclxuY29uc3QgZ2FtZSA9IG5ldyBHYW1lKCk7XHJcblxyXG5kaXNwbGF5LnBvcHVsYXRlRmllbGQoZGlzcGxheS5odW1hbkZpZWxkKTtcclxuZGlzcGxheS5wb3B1bGF0ZUZpZWxkKGRpc3BsYXkuY29tcHV0ZXJGaWVsZCwgKHRhcmdldCkgPT4gZ2FtZS5hdHRhY2tDb21wdXRlcih0YXJnZXQpKTtcclxuZ2FtZS5jb21wdXRlci5ib2FyZC5yYW5kb21QbGFjZSgpO1xyXG5cclxuZGlzcGxheS5zdGFydEdhbWVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgZ2FtZS5zdGFydCgpO1xyXG59KTtcclxuXHJcbmRpc3BsYXkucmFuZG9tUGxhY2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgZ2FtZS5odW1hbi5ib2FyZC5yYW5kb21QbGFjZSgpO1xyXG4gIFxyXG4gIGRpc3BsYXkucG9wdWxhdGVGaWVsZChkaXNwbGF5Lmh1bWFuRmllbGQpO1xyXG4gIGRpc3BsYXkudXBkYXRlKGdhbWUuaHVtYW4pO1xyXG4gIGRpc3BsYXkuZHJhZ3NDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbn0pOyIsImltcG9ydCB7IGh1bWFuLCBjb21wdXRlciB9IGZyb20gJy4vcGxheWVyJztcclxuaW1wb3J0IHsgZGlzcGxheSB9IGZyb20gJy4vZGlzcGxheSc7XHJcblxyXG5leHBvcnQgY2xhc3MgR2FtZSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmh1bWFuID0gaHVtYW47XHJcbiAgICB0aGlzLmNvbXB1dGVyID0gY29tcHV0ZXI7XHJcbiAgICB0aGlzLmN1cnJlbnRQbGF5ZXIgPSBodW1hbjtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgaWYgKGRpc3BsYXkuZHJhZ3NDb250YWluZXIuZmlyc3RFbGVtZW50Q2hpbGQpIHJldHVybjtcclxuXHJcbiAgICBkaXNwbGF5LnN0YXJ0R2FtZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuICAgIGRpc3BsYXkucmFuZG9tUGxhY2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29tcHV0ZXItc2lkZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG4gIH1cclxuXHJcbiAgYXR0YWNrQ29tcHV0ZXIoY2VsbCkge1xyXG4gICAgaWYgKGNlbGwuY2xhc3NMaXN0Lmxlbmd0aCA+IDApIHJldHVybjtcclxuICAgIGNvbnN0IHggPSBOdW1iZXIoY2VsbC5kYXRhc2V0LngpO1xyXG4gICAgY29uc3QgeSA9IE51bWJlcihjZWxsLmRhdGFzZXQueSk7XHJcbiAgICB0aGlzLmN1cnJlbnRQbGF5ZXIubWFrZU1vdmUoeCwgeSk7XHJcblxyXG4gICAgaWYgKHRoaXMuY2hlY2tXaW4oKSkge1xyXG4gICAgICB0aGlzLmVuZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXkudXBkYXRlKHRoaXMuY3VycmVudFBsYXllci5lbmVteSk7XHJcbiAgICB0aGlzLmN1cnJlbnRQbGF5ZXIgPSBjb21wdXRlcjtcclxuICAgIHRoaXMuYXR0YWNrSHVtYW4oKTtcclxuICB9XHJcblxyXG4gIGF0dGFja0h1bWFuKCkge1xyXG4gICAgdGhpcy5jdXJyZW50UGxheWVyLm1ha2VNb3ZlKCk7XHJcbiAgICBkaXNwbGF5LnVwZGF0ZSh0aGlzLmN1cnJlbnRQbGF5ZXIuZW5lbXkpO1xyXG4gICAgdGhpcy5jdXJyZW50UGxheWVyID0gaHVtYW47XHJcbiAgfVxyXG5cclxuICBjaGVja1dpbigpIHtcclxuICAgIHJldHVybiB0aGlzLmN1cnJlbnRQbGF5ZXIuZW5lbXkuYm9hcmQuYXJlU2hpcHNTdW5rKCk7XHJcbiAgfVxyXG5cclxuICBlbmQoKSB7XHJcbiAgICBkaXNwbGF5LmVuZGdhbWVTdGF0dXMuaW5uZXJUZXh0ID0gKHRoaXMuY3VycmVudFBsYXllciA9PT0gaHVtYW4pID8gJ3dvbicgOiAnbG9zdCc7XHJcbiAgICBkaXNwbGF5LmVuZGdhbWVNb2RhbC5zaG93TW9kYWwoKTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiZGlzcGxheSIsImNvbnN0cnVjdG9yIiwidGhpcyIsInN0YXJ0R2FtZUJ1dHRvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInJhbmRvbVBsYWNlQnV0dG9uIiwiaHVtYW5GaWVsZCIsImNvbXB1dGVyRmllbGQiLCJkcmFnc0NvbnRhaW5lciIsImVuZGdhbWVNb2RhbCIsImVuZGdhbWVTdGF0dXMiLCJ1cGRhdGUiLCJwbGF5ZXIiLCJmaWVsZCIsIm5hbWUiLCJib2FyZCIsInNoaXBzIiwiZm9yRWFjaCIsInNoaXAiLCJzaGlwSWQiLCJ1bmRlZmluZWQiLCJ4IiwiaSIsImxlbmd0aCIsInNoaXBDZWxsIiwidmVydGljYWwiLCJ5IiwiZGF0YXNldCIsImlkIiwiaXNTdW5rIiwiY2xhc3NOYW1lIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiaGl0cyIsIm1pc3NlZCIsImNvb3JkcyIsInBvcHVsYXRlRmllbGQiLCJmdW5jIiwiaW5uZXJIVE1MIiwiaiIsImNlbGwiLCJjcmVhdGVFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJhcHBlbmQiLCJTaGlwIiwiQXJyYXkiLCJmaWxsIiwiZW5kWCIsImVuZFkiLCJoaXQiLCJpbmRleCIsImV2ZXJ5IiwiaGFzQ2VsbCIsImFyb3VuZCIsInJhbmRvbU51bUluUmFuZ2UiLCJtaW4iLCJtYXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJHYW1lYm9hcmQiLCJyZXNldFNoaXBDb29yZHMiLCJTZXQiLCJNYXAiLCJyYW5kb21QbGFjZSIsImdldCIsImNoYW5nZVNoaXBDb29yZHMiLCJzZXQiLCJ2YWx1ZXMiLCJyZWNlaXZlQXR0YWNrIiwibm90Rm91bmQiLCJhZGQiLCJhcmVTaGlwc1N1bmsiLCJQbGF5ZXIiLCJlbmVteSIsIm1ha2VNb3ZlIiwiaHVtYW4iLCJzdXBlciIsImNvbXB1dGVyIiwiYXR0YWNrcyIsImhhcyIsImZyb20iLCJjaGlsZHJlbiIsImRuZCIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJkcmFnIiwiY2xvc2VzdCIsImNoYW5nZURpcmVjdGlvbiIsInByZXZlbnREZWZhdWx0IiwiTnVtYmVyIiwiZ2V0RGF0YSIsImRyb3AiLCJnYW1lIiwiY3VycmVudFBsYXllciIsInN0YXJ0IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJhdHRhY2tDb21wdXRlciIsImNoZWNrV2luIiwiZW5kIiwiYXR0YWNrSHVtYW4iLCJpbm5lclRleHQiLCJzaG93TW9kYWwiXSwic291cmNlUm9vdCI6IiJ9